{"ast":null,"code":"var _jsxFileName = \"/Users/hail/Documents/project/leod/src/components/Upload/upload.tsx\";\nimport React from 'react';\nimport axios from 'axios';\nexport const Upload = props => {\n  const {\n    action,\n    onProgress,\n    onSuccess,\n    onError\n  } = props;\n\n  const handleChange = e => {\n    const files = e.target.files;\n\n    if (!files) {\n      return;\n    }\n\n    uploadFiles(files);\n  };\n\n  const uploadFiles = files => {\n    let postFiles = Array.from(files);\n    postFiles.forEach(file => {\n      console.log(file, 33);\n      const formData = new FormData();\n      formData.append(file.name, file);\n      console.log(formData.getAll);\n      axios.post(action, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: e => {\n          let percentage = Math.round(e.loaded * 100 / e.total) || 0;\n\n          if (onProgress && percentage < 100) {\n            onProgress(percentage, file);\n          }\n        }\n      }).then(data => {\n        if (onSuccess) {\n          onSuccess(data, file);\n        }\n\n        console.log(data);\n      }).catch(err => {\n        if (onError) {\n          onError(err, file);\n        }\n\n        console.log(err);\n      });\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leod-upload-component\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    className: \"leod-file-input\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }));\n};\nUpload.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Upload\"\n};\nexport default Upload;\n\ntry {\n  // @ts-ignore\n  Upload.displayName = \"Upload\"; // @ts-ignore\n\n  Upload.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Upload\",\n    \"props\": {\n      \"action\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"action\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"onProgress\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onProgress\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(percentage: number, file: File) => void\"\n        }\n      },\n      \"onSuccess\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onSuccess\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(data: any, file: File) => void\"\n        }\n      },\n      \"onError\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onError\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(data: any, file: File) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Upload/upload.tsx#Upload\"] = {\n      docgenInfo: Upload.__docgenInfo,\n      name: \"Upload\",\n      path: \"src/components/Upload/upload.tsx#Upload\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\ntry {\n  // @ts-ignore\n  upload.displayName = \"upload\"; // @ts-ignore\n\n  upload.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"upload\",\n    \"props\": {\n      \"action\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"action\",\n        \"required\": true,\n        \"type\": {\n          \"name\": \"string\"\n        }\n      },\n      \"onProgress\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onProgress\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(percentage: number, file: File) => void\"\n        }\n      },\n      \"onSuccess\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onSuccess\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(data: any, file: File) => void\"\n        }\n      },\n      \"onError\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onError\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(data: any, file: File) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Upload/upload.tsx#upload\"] = {\n      docgenInfo: upload.__docgenInfo,\n      name: \"upload\",\n      path: \"src/components/Upload/upload.tsx#upload\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Upload/upload.tsx\"] = {\n    name: \"Upload\",\n    docgenInfo: Upload.__docgenInfo,\n    path: \"src/components/Upload/upload.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/hail/Documents/project/leod/src/components/Upload/upload.tsx"],"names":["Upload","props","onError","handleChange","e","files","uploadFiles","postFiles","Array","file","console","formData","axios","headers","onUploadProgress","percentage","Math","onProgress","data","onSuccess","err","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","upload"],"mappings":"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","sourcesContent":["import React, { FC, ChangeEvent } from 'react'\n\nimport axios from 'axios'\n\ninterface UploadProps {\n  action: string,\n  onProgress?: (percentage: number, file: File) => void,\n  onSuccess?: (data: any, file: File) => void,\n  onError?: (data: any, file: File) => void,\n\n}\nexport const Upload: FC<UploadProps> = (props) => {\n  const {\n    action,\n    onProgress,\n    onSuccess,\n    onError,\n  } = props\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files\n    if (!files) {\n      return\n    }\n    uploadFiles(files)\n\n  }\n  const uploadFiles = (files: FileList) => {\n    let postFiles = Array.from(files)\n    postFiles.forEach(file => {\n      console.log(file, 33)\n      const formData = new FormData()\n      formData.append(file.name, file)\n      console.log(formData.getAll)\n      axios.post(action, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        onUploadProgress: (e: ProgressEvent) => {\n          let percentage = Math.round(e.loaded * 100 / e.total) || 0\n          if (onProgress && percentage < 100) {\n            onProgress(percentage, file)\n          }\n        }\n      }).then((data: any) => {\n        if (onSuccess) {\n          onSuccess(data, file)\n        }\n        console.log(data)\n      }).catch((err: any) => {\n        if (onError) {\n          onError(err, file)\n        }\n        console.log(err)\n      })\n    })\n\n  }\n  return <div className=\"leod-upload-component\">\n    <input type=\"file\" className=\"leod-file-input\" onChange={handleChange} />\n  </div>\n}\n\n\nexport default Upload\ntry {\n    // @ts-ignore\n    Upload.displayName = \"Upload\";\n    // @ts-ignore\n    Upload.__docgenInfo = { \"description\": \"\", \"displayName\": \"Upload\", \"props\": { \"action\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"action\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"onProgress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onProgress\", \"required\": false, \"type\": { \"name\": \"(percentage: number, file: File) => void\" } }, \"onSuccess\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSuccess\", \"required\": false, \"type\": { \"name\": \"(data: any, file: File) => void\" } }, \"onError\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onError\", \"required\": false, \"type\": { \"name\": \"(data: any, file: File) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Upload/upload.tsx#Upload\"] = { docgenInfo: Upload.__docgenInfo, name: \"Upload\", path: \"src/components/Upload/upload.tsx#Upload\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    upload.displayName = \"upload\";\n    // @ts-ignore\n    upload.__docgenInfo = { \"description\": \"\", \"displayName\": \"upload\", \"props\": { \"action\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"action\", \"required\": true, \"type\": { \"name\": \"string\" } }, \"onProgress\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onProgress\", \"required\": false, \"type\": { \"name\": \"(percentage: number, file: File) => void\" } }, \"onSuccess\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onSuccess\", \"required\": false, \"type\": { \"name\": \"(data: any, file: File) => void\" } }, \"onError\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onError\", \"required\": false, \"type\": { \"name\": \"(data: any, file: File) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Upload/upload.tsx#upload\"] = { docgenInfo: upload.__docgenInfo, name: \"upload\", path: \"src/components/Upload/upload.tsx#upload\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}