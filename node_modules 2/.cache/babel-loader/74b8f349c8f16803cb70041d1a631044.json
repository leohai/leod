{"ast":null,"code":"import _objectWithoutProperties from \"/Users/hail/Documents/project/leod/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/hail/Documents/project/leod/src/components/Input/input.tsx\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport Icon from '../Icon';\nexport const Input = props => {\n  const {\n    disabled,\n    size,\n    icon,\n    prepend,\n    append,\n    style,\n    className\n  } = props,\n        restProps = _objectWithoutProperties(props, [\"disabled\", \"size\", \"icon\", \"prepend\", \"append\", \"style\", \"className\"]);\n\n  const klcass = classNames('leod-input-wrapper', className, {\n    [`input-size-${size}`]: size,\n    'is-disabled': disabled,\n    'input-group': prepend || append,\n    'input-group-append': append,\n    'input-group-prepend': prepend\n  });\n\n  const fixControlledValue = value => {\n    if (typeof value === 'undefined' || value === null) {\n      return '';\n    }\n\n    return value;\n  };\n\n  if ('value' in restProps) {\n    delete restProps.defaultValue;\n    restProps.value = fixControlledValue(restProps.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", Object.assign({\n    className: klcass\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 10\n    }\n  }), prepend && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leod-input-group-prepend\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, prepend), icon && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"icon-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 14\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: icon,\n    title: `title-${icon}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 44\n    }\n  })), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"leod-input-inner\",\n    disabled: disabled\n  }, restProps, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  })), append && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"leod-input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }\n  }, append));\n};\nInput.defaultProps = {\n  size: 'sm'\n};\nInput.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Input\",\n  \"props\": {\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'sm'\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default Input;\n\ntry {\n  // @ts-ignore\n  Input.displayName = \"Input\"; // @ts-ignore\n\n  Input.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"Input\",\n    \"props\": {\n      \"size\": {\n        \"defaultValue\": {\n          value: \"sm\"\n        },\n        \"description\": \"\",\n        \"name\": \"size\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"enum\",\n          \"value\": [{\n            \"value\": \"\\\"lg\\\"\"\n          }, {\n            \"value\": \"\\\"sm\\\"\"\n          }]\n        }\n      },\n      \"prepend\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"prepend\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\"\n        }\n      },\n      \"icon\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"icon\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"IconProp\"\n        }\n      },\n      \"append\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"append\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\"\n        }\n      },\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onChange\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(e: ChangeEvent<HTMLInputElement>) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Input/input.tsx#Input\"] = {\n      docgenInfo: Input.__docgenInfo,\n      name: \"Input\",\n      path: \"src/components/Input/input.tsx#Input\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\ntry {\n  // @ts-ignore\n  input.displayName = \"input\"; // @ts-ignore\n\n  input.__docgenInfo = {\n    \"description\": \"\",\n    \"displayName\": \"input\",\n    \"props\": {\n      \"size\": {\n        \"defaultValue\": {\n          value: \"sm\"\n        },\n        \"description\": \"\",\n        \"name\": \"size\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"enum\",\n          \"value\": [{\n            \"value\": \"\\\"lg\\\"\"\n          }, {\n            \"value\": \"\\\"sm\\\"\"\n          }]\n        }\n      },\n      \"prepend\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"prepend\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\"\n        }\n      },\n      \"icon\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"icon\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"IconProp\"\n        }\n      },\n      \"append\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"append\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\"\n        }\n      },\n      \"onChange\": {\n        \"defaultValue\": null,\n        \"description\": \"\",\n        \"name\": \"onChange\",\n        \"required\": false,\n        \"type\": {\n          \"name\": \"(e: ChangeEvent<HTMLInputElement>) => void\"\n        }\n      }\n    }\n  }; // @ts-ignore\n\n  if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") // @ts-ignore\n    STORYBOOK_REACT_CLASSES[\"src/components/Input/input.tsx#input\"] = {\n      docgenInfo: input.__docgenInfo,\n      name: \"input\",\n      path: \"src/components/Input/input.tsx#input\"\n    };\n} catch (__react_docgen_typescript_loader_error) {}\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/Input/input.tsx\"] = {\n    name: \"Input\",\n    docgenInfo: Input.__docgenInfo,\n    path: \"src/components/Input/input.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/hail/Documents/project/leod/src/components/Input/input.tsx"],"names":["Input","props","restProps","klcass","classNames","size","prepend","fixControlledValue","value","icon","disabled","append","STORYBOOK_REACT_CLASSES","docgenInfo","name","path","input"],"mappings":"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","sourcesContent":["import React, { FC, InputHTMLAttributes, ReactElement, ChangeEvent } from 'react'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core'\nimport classNames from 'classnames'\nimport Icon from '../Icon'\ntype INPUTSIZE = 'lg' | 'sm'\n\nexport interface InputProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'size'> {\n  size?: INPUTSIZE,\n  prepend?: string | ReactElement,\n  icon?: IconProp,\n  append?: string | ReactElement,\n  onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport const Input: FC<InputProps> = (props) => {\n  const {\n    disabled,\n    size,\n    icon,\n    prepend,\n    append,\n    style,\n    className,\n    ...restProps\n  } = props\n  const klcass = classNames('leod-input-wrapper', className, {\n    [`input-size-${size}`]: size,\n    'is-disabled': disabled,\n    'input-group': prepend || append,\n    'input-group-append': append,\n    'input-group-prepend': prepend\n  })\n  const fixControlledValue = (value: any) => {\n    if (typeof value === 'undefined' || value === null) {\n      return ''\n    }\n    return value\n  }\n  if ('value' in restProps) {\n    delete restProps.defaultValue\n    restProps.value = fixControlledValue(restProps.value)\n  }\n  return <div className={klcass} {...restProps}>\n    {prepend && <div className=\"leod-input-group-prepend\">{prepend}</div>}\n    {icon && <div className=\"icon-wrapper\"><Icon icon={icon} title={`title-${icon}`} /></div>}\n    <input\n      className=\"leod-input-inner\"\n      disabled={disabled}\n      {...restProps}\n    />\n    {append && <div className=\"leod-input-group-append\">{append}</div>}\n  </div>\n}\nInput.defaultProps = {\n  size: 'sm'\n}\n\nexport default Input;try {\n    // @ts-ignore\n    Input.displayName = \"Input\";\n    // @ts-ignore\n    Input.__docgenInfo = { \"description\": \"\", \"displayName\": \"Input\", \"props\": { \"size\": { \"defaultValue\": { value: \"sm\" }, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"enum\", \"value\": [{ \"value\": \"\\\"lg\\\"\" }, { \"value\": \"\\\"sm\\\"\" }] } }, \"prepend\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prepend\", \"required\": false, \"type\": { \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"IconProp\" } }, \"append\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"append\", \"required\": false, \"type\": { \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: ChangeEvent<HTMLInputElement>) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Input/input.tsx#Input\"] = { docgenInfo: Input.__docgenInfo, name: \"Input\", path: \"src/components/Input/input.tsx#Input\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }try {\n    // @ts-ignore\n    input.displayName = \"input\";\n    // @ts-ignore\n    input.__docgenInfo = { \"description\": \"\", \"displayName\": \"input\", \"props\": { \"size\": { \"defaultValue\": { value: \"sm\" }, \"description\": \"\", \"name\": \"size\", \"required\": false, \"type\": { \"name\": \"enum\", \"value\": [{ \"value\": \"\\\"lg\\\"\" }, { \"value\": \"\\\"sm\\\"\" }] } }, \"prepend\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"prepend\", \"required\": false, \"type\": { \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"icon\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"icon\", \"required\": false, \"type\": { \"name\": \"IconProp\" } }, \"append\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"append\", \"required\": false, \"type\": { \"name\": \"string | ReactElement<any, string | ((props: any) => ReactElement<any, string | ... | (new (props: any) => Component<any, any, any>)>) | (new (props: any) => Component<any, any, any>)>\" } }, \"onChange\": { \"defaultValue\": null, \"description\": \"\", \"name\": \"onChange\", \"required\": false, \"type\": { \"name\": \"(e: ChangeEvent<HTMLInputElement>) => void\" } } } };\n    // @ts-ignore\n    if (typeof STORYBOOK_REACT_CLASSES !== \"undefined\")\n        // @ts-ignore\n        STORYBOOK_REACT_CLASSES[\"src/components/Input/input.tsx#input\"] = { docgenInfo: input.__docgenInfo, name: \"input\", path: \"src/components/Input/input.tsx#input\" };\n}\ncatch (__react_docgen_typescript_loader_error) { }"]},"metadata":{},"sourceType":"module"}