{"ast":null,"code":"import _objectSpread from \"/Users/hail/Documents/project/leod/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/hail/Documents/project/leod/src/components/AutoComplete/autoComplete.stories.tsx\";\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/hail/Documents/project/leod/src/components/AutoComplete\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { AutoComplete, DataSourceType } from './AutoComplete'\\ninterface LakerPlayerProps {\\n  value: string;\\n  number: number;\\n}\\ninterface GithubUserProps {\\n  login: string;\\n  url: string;\\n  avatar_url: string;\\n}\\nconst SimpleComplete = () => {\\n  const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\\n    'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\\n  // const lakersWithNumber = [\\n  //   {value: 'bradley', number: 11},\\n  //   {value: 'pope', number: 1},\\n  //   {value: 'caruso', number: 4},\\n  //   {value: 'cook', number: 2},\\n  //   {value: 'cousins', number: 15},\\n  //   {value: 'james', number: 23},\\n  //   {value: 'AD', number: 3},\\n  //   {value: 'green', number: 14},\\n  //   {value: 'howard', number: 39},\\n  //   {value: 'kuzma', number: 0},\\n  // ]\\n\\n  // const handleFetch = (query: string) => {\\n  //   return lakers.filter(name => name.includes(query)).map(name => ({ value: name }))\\n  // }\\n  // const handleFetch = (query: string) => {\\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\\n  // }\\n  const handleFetch = (query: string) => {\\n    return fetch(`https://api.github.com/search/users?q=${query}`)\\n      .then(res => res.json())\\n      .then(({ items }) => {\\n        console.log(items)\\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item }))\\n      })\\n  }\\n  const renderOption = (item: DataSourceType) => {\\n    const itemWithGithub = item as DataSourceType<GithubUserProps>\\n    return (\\n      <>\\n        <h2>Name: {itemWithGithub.value}</h2>\\n        <p>url: {itemWithGithub.url}</p>\\n      </>\\n    )\\n  }\\n  return (\\n    <AutoComplete\\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\\n\\nstoriesOf('AutoComplete Component', module)\\n  .add('AutoComplete', SimpleComplete)\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {\n  \"autocomplete-component--autocomplete\": {\n    \"startLoc\": {\n      \"col\": 7,\n      \"line\": 63\n    },\n    \"endLoc\": {\n      \"col\": 37,\n      \"line\": 63\n    },\n    \"startBody\": {\n      \"col\": 23,\n      \"line\": 63\n    },\n    \"endBody\": {\n      \"col\": 37,\n      \"line\": 63\n    }\n  }\n}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/autoComplete.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { storiesOf } from '@storybook/react';\nimport { action } from '@storybook/addon-actions';\nimport { AutoComplete } from './AutoComplete';\n\nconst SimpleComplete = () => {\n  const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins', 'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']; // const lakersWithNumber = [\n  //   {value: 'bradley', number: 11},\n  //   {value: 'pope', number: 1},\n  //   {value: 'caruso', number: 4},\n  //   {value: 'cook', number: 2},\n  //   {value: 'cousins', number: 15},\n  //   {value: 'james', number: 23},\n  //   {value: 'AD', number: 3},\n  //   {value: 'green', number: 14},\n  //   {value: 'howard', number: 39},\n  //   {value: 'kuzma', number: 0},\n  // ]\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({ value: name }))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n\n  const handleFetch = query => {\n    return fetch(`https://api.github.com/search/users?q=${query}`).then(res => res.json()).then(({\n      items\n    }) => {\n      console.log(items);\n      return items.slice(0, 10).map(item => _objectSpread({\n        value: item.login\n      }, item));\n    });\n  };\n\n  const renderOption = item => {\n    const itemWithGithub = item;\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }\n    }, \"Name: \", itemWithGithub.value), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }, \"url: \", itemWithGithub.url));\n  };\n\n  return /*#__PURE__*/React.createElement(AutoComplete, {\n    fetchSuggestions: handleFetch,\n    onSelect: action('selected'),\n    renderOption: renderOption,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  });\n};\n\nstoriesOf('AutoComplete Component', module).addParameters({\n  storySource: {\n    source: __STORY__,\n    locationsMap: __ADDS_MAP__\n  }\n}).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__, __MAIN_FILE_LOCATION__, __MODULE_DEPENDENCIES__, __LOCAL_DEPENDENCIES__, __SOURCE_PREFIX__, __IDS_TO_FRAMEWORKS__)).add('AutoComplete', SimpleComplete);","map":{"version":3,"sources":["/Users/hail/Documents/project/leod/src/components/AutoComplete/autoComplete.stories.tsx"],"names":["withSourceLoader","require","addSourceDecorator","__SOURCE_PREFIX__","__STORY__","__ADDS_MAP__","__MAIN_FILE_LOCATION__","__MODULE_DEPENDENCIES__","__LOCAL_DEPENDENCIES__","__IDS_TO_FRAMEWORKS__","SimpleComplete","lakers","handleFetch","query","res","items","console","item","value","renderOption","itemWithGithub","action","storiesOf","storySource","source","locationsMap"],"mappings":"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","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/hail/Documents/project/leod/src/components/AutoComplete\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { storiesOf } from '@storybook/react'\\nimport { action } from '@storybook/addon-actions'\\nimport { AutoComplete, DataSourceType } from './AutoComplete'\\ninterface LakerPlayerProps {\\n  value: string;\\n  number: number;\\n}\\ninterface GithubUserProps {\\n  login: string;\\n  url: string;\\n  avatar_url: string;\\n}\\nconst SimpleComplete = () => {\\n  const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\\n    'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\\n  // const lakersWithNumber = [\\n  //   {value: 'bradley', number: 11},\\n  //   {value: 'pope', number: 1},\\n  //   {value: 'caruso', number: 4},\\n  //   {value: 'cook', number: 2},\\n  //   {value: 'cousins', number: 15},\\n  //   {value: 'james', number: 23},\\n  //   {value: 'AD', number: 3},\\n  //   {value: 'green', number: 14},\\n  //   {value: 'howard', number: 39},\\n  //   {value: 'kuzma', number: 0},\\n  // ]\\n\\n  // const handleFetch = (query: string) => {\\n  //   return lakers.filter(name => name.includes(query)).map(name => ({ value: name }))\\n  // }\\n  // const handleFetch = (query: string) => {\\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\\n  // }\\n  const handleFetch = (query: string) => {\\n    return fetch(`https://api.github.com/search/users?q=${query}`)\\n      .then(res => res.json())\\n      .then(({ items }) => {\\n        console.log(items)\\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item }))\\n      })\\n  }\\n  const renderOption = (item: DataSourceType) => {\\n    const itemWithGithub = item as DataSourceType<GithubUserProps>\\n    return (\\n      <>\\n        <h2>Name: {itemWithGithub.value}</h2>\\n        <p>url: {itemWithGithub.url}</p>\\n      </>\\n    )\\n  }\\n  return (\\n    <AutoComplete\\n      fetchSuggestions={handleFetch}\\n      onSelect={action('selected')}\\n      renderOption={renderOption}\\n    />\\n  )\\n}\\n\\nstoriesOf('AutoComplete Component', module)\\n  .add('AutoComplete', SimpleComplete)\";\n// @ts-ignore\nvar __ADDS_MAP__ = {\"autocomplete-component--autocomplete\":{\"startLoc\":{\"col\":7,\"line\":63},\"endLoc\":{\"col\":37,\"line\":63},\"startBody\":{\"col\":23,\"line\":63},\"endBody\":{\"col\":37,\"line\":63}}};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/autoComplete.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { storiesOf } from '@storybook/react'\nimport { action } from '@storybook/addon-actions'\nimport { AutoComplete, DataSourceType } from './AutoComplete'\ninterface LakerPlayerProps {\n  value: string;\n  number: number;\n}\ninterface GithubUserProps {\n  login: string;\n  url: string;\n  avatar_url: string;\n}\nconst SimpleComplete = () => {\n  const lakers = ['bradley', 'pope', 'caruso', 'cook', 'cousins',\n    'james', 'AD', 'green', 'howard', 'kuzma', 'McGee', 'rando']\n  // const lakersWithNumber = [\n  //   {value: 'bradley', number: 11},\n  //   {value: 'pope', number: 1},\n  //   {value: 'caruso', number: 4},\n  //   {value: 'cook', number: 2},\n  //   {value: 'cousins', number: 15},\n  //   {value: 'james', number: 23},\n  //   {value: 'AD', number: 3},\n  //   {value: 'green', number: 14},\n  //   {value: 'howard', number: 39},\n  //   {value: 'kuzma', number: 0},\n  // ]\n\n  // const handleFetch = (query: string) => {\n  //   return lakers.filter(name => name.includes(query)).map(name => ({ value: name }))\n  // }\n  // const handleFetch = (query: string) => {\n  //   return lakersWithNumber.filter(player => player.value.includes(query))\n  // }\n  const handleFetch = (query: string) => {\n    return fetch(`https://api.github.com/search/users?q=${query}`)\n      .then(res => res.json())\n      .then(({ items }) => {\n        console.log(items)\n        return items.slice(0, 10).map((item: any) => ({ value: item.login, ...item }))\n      })\n  }\n  const renderOption = (item: DataSourceType) => {\n    const itemWithGithub = item as DataSourceType<GithubUserProps>\n    return (\n      <>\n        <h2>Name: {itemWithGithub.value}</h2>\n        <p>url: {itemWithGithub.url}</p>\n      </>\n    )\n  }\n  return (\n    <AutoComplete\n      fetchSuggestions={handleFetch}\n      onSelect={action('selected')}\n      renderOption={renderOption}\n    />\n  )\n}\n\nstoriesOf('AutoComplete Component', module).addParameters({ storySource: { source: __STORY__, locationsMap: __ADDS_MAP__ } }).addDecorator(withSourceLoader(__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__))\n  .add('AutoComplete', SimpleComplete)"]},"metadata":{},"sourceType":"module"}